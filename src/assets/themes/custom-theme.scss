
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();


// GAMA COLORES
$custom-primary-map: (
  100 : #9FA8DA,
  500 : #2d3666,
  700 : #1a1f3f,
    contrast: (
      100: rgba(white, 0.87),
      500: rgba(white, 0.87),
      700: rgba(white, 0.87)
    )
);


$custom-accent-map: (
  100 : #B2DFDB,
  500 : #009688,
  700 : #00796B,
  contrast: (
    100: rgba(white, 0.87),
    500: rgba(white, 0.87),
    700: rgba(white, 0.87)
  )
);

$custom-warn-map: (
  100 : #FFCCBC,
  500 : #FF5722,
  700 : #E64A19,
  contrast: (
    100 : #000000,
    500 : #000000,
    700 : #000000,
  )
);


// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
/* $frontEndKSP-primary: mat.define-palette(mat.$indigo-palette);
$frontEndKSP-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);
 */

// PALETA DE COLORES
$frontEndKSP-primary: mat.define-palette($custom-primary-map);
$frontEndKSP-accent: mat.define-palette($custom-accent-map);
$frontEndKSP-warn: mat.define-palette($custom-warn-map);


// The warn palette is optional (defaults to red).
//$frontEndKSP-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$frontEndKSP-theme: mat.define-light-theme((
  color: (
    primary: $frontEndKSP-primary,
    accent: $frontEndKSP-accent,
    warn: $frontEndKSP-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($frontEndKSP-theme);